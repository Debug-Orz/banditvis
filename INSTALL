INSTALL for Banditvis
====================
Thomas Steinbrenner <thomas@thomas-steinbrenner.net>
v0.2, February 2011
This software is licensed under the GNU Lesser General Public License.

== Requirements

see README

== Installation

. Postgres:
. Switch to the DBadmin. (Run: su postgres )
. Create a user. (Execute: "CREATE USER <<user>> WITH PASSWORD '<<password>>';" )
. Create a database. (Execute: "CREATE DATABASE database;" )
. Update banditvis/config.ini
. Change owner. (Execute: "ALTER DATABASE database OWNER TO user;" )
. Load postgis extensions. (Debian: psql -d database -f /usr/share/postgresql-8.3-postgis/lwpostgis.sql )
. Load spatial reference system extensions. (Debian: psql -d banditvis -f /usr/share/postgresql/8.4/contrib/postgis-1.5/spatial_ref_sys.sql )
. Add tables. (Execute: "CREATE TABLE bandits (key text NOT NULL, ip_address inet, offence text, count bigint DEFAULT 1, last_seen timestamp with time zone, status text);" )
. Add a geometry column. (Execute: "SELECT AddGeometryColumn ('bandits', 'location', 4326, 'POINT', 2);" )
. Add the add_bandit function. (Execute:"

CREATE FUNCTION add_bandit(key_v text, ip_address_v inet, offence_v text, status_v text, last_seen_v timestamp without time zone, coordinates_v text) RETURNS void
    LANGUAGE plpgsql
    AS $$BEGIN
    LOOP
        -- first try to update the key
        UPDATE bandits SET count = count + 1 WHERE key = key_v;
        IF found THEN
            RETURN;
        END IF;
        -- not there, so try to insert the key
        -- if someone else inserts the same key concurrently,
        -- we could get a unique-key failure
        BEGIN
            INSERT INTO bandits (key, ip_address, offence, count, status, last_seen, location) VALUES ( key_v, ip_address_v, offence_v, 1, status_v, last_seen_v, ST_GeomFromText('POINT(' || coordinates_v || ')', 4326) );
            RETURN;
        EXCEPTION WHEN unique_violation THEN
            -- do nothing, and loop to try the UPDATE again
        END;
    END LOOP;
END;$$;

")

. GeoIP:
. Download the latest GeoLiteCity.dat database to data/GeoIP/ (Run: ./update_geoip.py)

. Webserver:
. Create the directory /var/lib/banditvis/output
. Create an Alias from /var/lib/banditvis/output to <<webroot>>/banditvis/output/ .
. Copy the content of interactive/ to <<webroot>>/banditvis/ .

. fail2ban: 
. Add "&& (cd /<<your-banditvis-dir>>/ && ./add_bandit.py <ip> <name>)" to the "actionban"-line of your fail2ban configuration
. Restart or reload fail2ban.

. cronjob:
. add a cronjob that runs draw_pointmap.py && write_kml.py
. (optional) add a cronjob that runs update_geoip.py